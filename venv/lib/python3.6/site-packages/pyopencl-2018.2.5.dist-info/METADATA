Metadata-Version: 2.1
Name: pyopencl
Version: 2018.2.5
Summary: Python wrapper for OpenCL
Home-page: http://mathema.tician.de/software/pyopencl
Author: Andreas Kloeckner
Author-email: inform@tiker.net
License: MIT
Platform: UNKNOWN
Classifier: Environment :: Console
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Other Audience
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: C++
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Scientific/Engineering :: Physics
Provides-Extra: pocl
Provides-Extra: oclgrind
Requires-Dist: numpy
Requires-Dist: pytools (>=2017.6)
Requires-Dist: decorator (>=3.2.0)
Requires-Dist: appdirs (>=1.4.0)
Requires-Dist: six (>=1.9.0)
Provides-Extra: oclgrind
Requires-Dist: oclgrind-binary-distribution (>=18.3); extra == 'oclgrind'
Provides-Extra: pocl
Requires-Dist: pocl-binary-distribution (>=1.2); extra == 'pocl'

PyOpenCL: Pythonic Access to OpenCL, with Arrays and Algorithms
---------------------------------------------------------------

.. image:: https://gitlab.tiker.net/inducer/pyopencl/badges/master/pipeline.svg
   :target: https://gitlab.tiker.net/inducer/pyopencl/commits/master
.. image:: https://badge.fury.io/py/pyopencl.png
   :target: http://pypi.python.org/pypi/pyopencl
(Also: `Travis CI <https://travis-ci.org/inducer/pyopencl/builds>`_ to build binary wheels for releases, see `#264 <https://github.com/inducer/pyopencl/pull/264>`_)

PyOpenCL lets you access GPUs and other massively parallel compute
devices from Python. It tries to offer computing goodness in the
spirit of its sister project `PyCUDA <http://mathema.tician.de/software/pycuda>`_:

* Object cleanup tied to lifetime of objects. This idiom, often
  called
  `RAII <http://en.wikipedia.org/wiki/Resource_Acquisition_Is_Initialization>`_
  in C++, makes it much easier to write correct, leak- and
  crash-free code.

* Completeness. PyOpenCL puts the full power of OpenCL's API at
  your disposal, if you wish.  Every obscure `get_info()` query and 
  all CL calls are accessible.

* Automatic Error Checking. All CL errors are automatically
  translated into Python exceptions.

* Speed. PyOpenCL's base layer is written in C++, so all the niceties
  above are virtually free.

* Helpful and complete `Documentation <http://documen.tician.de/pyopencl>`_
  as well as a `Wiki <http://wiki.tiker.net/PyOpenCL>`_.

* Liberal license. PyOpenCL is open-source under the 
  `MIT license <http://en.wikipedia.org/wiki/MIT_License>`_
  and free for commercial, academic, and private use.

* Broad support. PyOpenCL was tested and works with Apple's, AMD's, and Nvidia's 
  CL implementations.

Simple 4-step `install instructions <https://documen.tician.de/pyopencl/misc.html#installation>`_
using Conda on Linux and macOS (that also install a working OpenCL implementation!)
can be found in the `documentation <https://documen.tician.de/pyopencl/>`_.

What you'll need if you do *not* want to use the convenient instructions above and
instead build from source:

*   gcc/g++ new enough to be compatible with pybind11
    (see their `FAQ <https://pybind11.readthedocs.io/en/stable/faq.html>`_)
*   `numpy <http://numpy.org>`_, and
*   an OpenCL implementation. (See this `howto <http://wiki.tiker.net/OpenCLHowTo>`_ for how to get one.)

Places on the web related to PyOpenCL:

* `Python package index <http://pypi.python.org/pypi/pyopencl>`_ (download releases)

* `Documentation <http://documen.tician.de/pyopencl>`_ (read how things work)
* `Conda Forge <https://anaconda.org/conda-forge/pyopencl>`_ (download binary packages for Linux, macOS, Windows)
* `C. Gohlke's Windows binaries <http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyopencl>`_ (download Windows binaries)
* `Github <http://github.com/inducer/pyopencl>`_ (get latest source code, file bugs)
* `Wiki <http://wiki.tiker.net/PyOpenCL>`_ (read installation tips, get examples, read FAQ)


